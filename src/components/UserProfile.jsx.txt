import { useState } from 'react';
import { FaUser, FaEnvelope, FaLock, FaBell, FaSave, FaTimes } from 'react-icons/fa';
import { Link } from 'react-router-dom';

const UserProfile = () => {
  const [user, setUser] = useState({
    name: 'John Doe',
    email: 'john.doe@example.com',
    avatar: 'https://via.placeholder.com/150',
    notifications: true,
    twoFactorAuth: false,
  });

  const [password, setPassword] = useState({
    current: '',
    new: '',
    confirm: ''
  });

  const [activeTab, setActiveTab] = useState('profile');

  const handleAvatarChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => {
        setUser(prev => ({ ...prev, avatar: reader.result }));
      };
      reader.readAsDataURL(file);
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Add profile update logic here
    console.log('Profile updated:', user);
  };

  const handlePasswordChange = (e) => {
    e.preventDefault();
    // Add password change logic here
    console.log('Password changed');
  };

  return (
    <div className="p-6 bg-gray-50 min-h-screen">
      <div className="max-w-4xl mx-auto bg-white rounded-lg shadow-md p-6">
        <div className="flex flex-col md:flex-row gap-6">
          {/* Profile Sidebar */}
          <div className="w-full md:w-64 border-r border-gray-200">
            <div className="text-center mb-6">
              <label className="cursor-pointer">
                <input
                  type="file"
                  accept="image/*"
                  onChange={handleAvatarChange}
                  className="hidden"
                />
                <img
                  src={user.avatar}
                  alt="Avatar"
                  className="w-32 h-32 rounded-full mx-auto mb-4 hover:opacity-80 transition-opacity"
                />
              </label>
              <h2 className="text-xl font-bold">{user.name}</h2>
              <p className="text-gray-600">{user.email}</p>
            </div>

            <nav className="space-y-2">
              <button
                onClick={() => setActiveTab('profile')}
                className={`w-full text-left p-3 rounded-lg ${activeTab === 'profile' ? 'bg-blue-100 text-blue-600' : 'hover:bg-gray-100'}`}
              >
                <FaUser className="inline-block mr-2" /> Profile
              </button>
              <button
                onClick={() => setActiveTab('security')}
                className={`w-full text-left p-3 rounded-lg ${activeTab === 'security' ? 'bg-blue-100 text-blue-600' : 'hover:bg-gray-100'}`}
              >
                <FaLock className="inline-block mr-2" /> Security
              </button>
              <button
                onClick={() => setActiveTab('notifications')}
                className={`w-full text-left p-3 rounded-lg ${activeTab === 'notifications' ? 'bg-blue-100 text-blue-600' : 'hover:bg-gray-100'}`}
              >
                <FaBell className="inline-block mr-2" /> Notifications
              </button>
            </nav>
          </div>

          {/* Main Content */}
          <div className="flex-1">
            {activeTab === 'profile' && (
              <form onSubmit={handleSubmit}>
                <h3 className="text-xl font-bold mb-4 flex items-center">
                  <FaUser className="mr-2" /> Profile Information
                </h3>
                
                <div className="mb-4">
                  <label className="block text-gray-700 mb-2">Full Name</label>
                  <input
                    type="text"
                    value={user.name}
                    onChange={(e) => setUser({ ...user, name: e.target.value })}
                    className="w-full p-2 border rounded-lg"
                    required
                  />
                </div>

                <div className="mb-4">
                  <label className="block text-gray-700 mb-2">Email</label>
                  <input
                    type="email"
                    value={user.email}
                    onChange={(e) => setUser({ ...user, email: e.target.value })}
                    className="w-full p-2 border rounded-lg"
                    required
                  />
                </div>

                <button
                  type="submit"
                  className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center"
                >
                  <FaSave className="mr-2" /> Save Changes
                </button>
              </form>
            )}

            {activeTab === 'security' && (
              <form onSubmit={handlePasswordChange}>
                <h3 className="text-xl font-bold mb-4 flex items-center">
                  <FaLock className="mr-2" /> Security Settings
                </h3>

                <div className="mb-4">
                  <label className="block text-gray-700 mb-2">Current Password</label>
                  <input
                    type="password"
                    value={password.current}
                    onChange={(e) => setPassword({ ...password, current: e.target.value })}
                    className="w-full p-2 border rounded-lg"
                    required
                  />
                </div>

                <div className="mb-4">
                  <label className="block text-gray-700 mb-2">New Password</label>
                  <input
                    type="password"
                    value={password.new}
                    onChange={(e) => setPassword({ ...password, new: e.target.value })}
                    className="w-full p-2 border rounded-lg"
                    required
                  />
                </div>

                <div className="mb-4">
                  <label className="block text-gray-700 mb-2">Confirm New Password</label>
                  <input
                    type="password"
                    value={password.confirm}
                    onChange={(e) => setPassword({ ...password, confirm: e.target.value })}
                    className="w-full p-2 border rounded-lg"
                    required
                  />
                </div>

                <div className="flex gap-4">
                  <button
                    type="submit"
                    className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center"
                  >
                    <FaSave className="mr-2" /> Change Password
                  </button>
                  <button
                    type="button"
                    onClick={() => setUser(prev => ({ ...prev, twoFactorAuth: !prev.twoFactorAuth }))}
                    className={`px-4 py-2 rounded-lg flex items-center ${
                      user.twoFactorAuth 
                        ? 'bg-green-600 text-white hover:bg-green-700' 
                        : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                    }`}
                  >
                    {user.twoFactorAuth ? <FaCheckCircle className="mr-2" /> : <FaTimes className="mr-2" />}
                    2FA {user.twoFactorAuth ? 'Enabled' : 'Disabled'}
                  </button>
                </div>
              </form>
            )}

            {activeTab === 'notifications' && (
              <div>
                <h3 className="text-xl font-bold mb-4 flex items-center">
                  <FaBell className="mr-2" /> Notification Preferences
                </h3>

                <div className="space-y-4">
                  <label className="flex items-center space-x-3">
                    <input
                      type="checkbox"
                      checked={user.notifications}
                      onChange={(e) => setUser({ ...user, notifications: e.target.checked })}
                      className="form-checkbox h-5 w-5 text-blue-600"
                    />
                    <span className="text-gray-700">Enable Email Notifications</span>
                  </label>

                  <div className="mt-6">
                    <button
                      type="button"
                      onClick={() => console.log('Notification preferences saved')}
                      className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center"
                    >
                      <FaSave className="mr-2" /> Save Preferences
                    </button>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default UserProfile;