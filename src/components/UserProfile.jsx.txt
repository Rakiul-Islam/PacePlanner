import { useState } from 'react';
import { FaUser, FaLock, FaBell, FaSave, FaTimes } from 'react-icons/fa';

const UserProfile = () => {
  const [user, setUser] = useState({
    name: 'John Doe',
    email: 'john.doe@example.com',
    avatar: 'https://via.placeholder.com/150',
    notifications: true,
    twoFactorAuth: false,
  });

  const [password, setPassword] = useState({ current: '', new: '', confirm: '' });
  const [activeTab, setActiveTab] = useState('profile');

  const handleAvatarChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => setUser((prev) => ({ ...prev, avatar: reader.result }));
      reader.readAsDataURL(file);
    }
  };

  const handleInputChange = (e, field) => {
    setUser((prev) => ({ ...prev, [field]: e.target.value }));
  };

  const handlePasswordChange = (e, field) => {
    setPassword((prev) => ({ ...prev, [field]: e.target.value }));
  };

  const InputField = ({ label, type, value, onChange }) => (
    <div className="mb-4">
      <label className="block text-gray-700 mb-2">{label}</label>
      <input type={type} value={value} onChange={onChange} className="w-full p-2 border rounded-lg" required />
    </div>
  );

  const TabButton = ({ tab, icon: Icon, label }) => (
    <button
      onClick={() => setActiveTab(tab)}
      className={`w-full text-left p-3 rounded-lg ${
        activeTab === tab ? 'bg-blue-100 text-blue-600' : 'hover:bg-gray-100'
      }`}
    >
      <Icon className="inline-block mr-2" /> {label}
    </button>
  );

  return (
    <div className="p-6 bg-gray-50 min-h-screen">
      <div className="max-w-4xl mx-auto bg-white rounded-lg shadow-md p-6 flex flex-col md:flex-row gap-6">
        {/* Sidebar */}
        <div className="w-full md:w-64 border-r border-gray-200 text-center">
          <label className="cursor-pointer">
            <input type="file" accept="image/*" onChange={handleAvatarChange} className="hidden" />
            <img src={user.avatar} alt="Avatar" className="w-32 h-32 rounded-full mx-auto mb-4 hover:opacity-80 transition-opacity" />
          </label>
          <h2 className="text-xl font-bold">{user.name}</h2>
          <p className="text-gray-600">{user.email}</p>

          <nav className="space-y-2 mt-4">
            <TabButton tab="profile" icon={FaUser} label="Profile" />
            <TabButton tab="security" icon={FaLock} label="Security" />
            <TabButton tab="notifications" icon={FaBell} label="Notifications" />
          </nav>
        </div>

        {/* Main Content */}
        <div className="flex-1">
          {activeTab === 'profile' && (
            <form onSubmit={(e) => e.preventDefault()}>
              <h3 className="text-xl font-bold mb-4 flex items-center">
                <FaUser className="mr-2" /> Profile Information
              </h3>
              <InputField label="Full Name" type="text" value={user.name} onChange={(e) => handleInputChange(e, 'name')} />
              <InputField label="Email" type="email" value={user.email} onChange={(e) => handleInputChange(e, 'email')} />
              <button type="submit" className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center">
                <FaSave className="mr-2" /> Save Changes
              </button>
            </form>
          )}

          {activeTab === 'security' && (
            <form onSubmit={(e) => e.preventDefault()}>
              <h3 className="text-xl font-bold mb-4 flex items-center">
                <FaLock className="mr-2" /> Security Settings
              </h3>
              <InputField label="Current Password" type="password" value={password.current} onChange={(e) => handlePasswordChange(e, 'current')} />
              <InputField label="New Password" type="password" value={password.new} onChange={(e) => handlePasswordChange(e, 'new')} />
              <InputField label="Confirm New Password" type="password" value={password.confirm} onChange={(e) => handlePasswordChange(e, 'confirm')} />
              <div className="flex gap-4">
                <button type="submit" className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center">
                  <FaSave className="mr-2" /> Change Password
                </button>
                <button
                  type="button"
                  onClick={() => setUser((prev) => ({ ...prev, twoFactorAuth: !prev.twoFactorAuth }))}
                  className={`px-4 py-2 rounded-lg flex items-center ${
                    user.twoFactorAuth ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                  }`}
                >
                  {user.twoFactorAuth ? <FaTimes className="mr-2" /> : <FaTimes className="mr-2" />}
                  2FA {user.twoFactorAuth ? 'Enabled' : 'Disabled'}
                </button>
              </div>
            </form>
          )}

          {activeTab === 'notifications' && (
            <div>
              <h3 className="text-xl font-bold mb-4 flex items-center">
                <FaBell className="mr-2" /> Notification Preferences
              </h3>
              <label className="flex items-center space-x-3">
                <input
                  type="checkbox"
                  checked={user.notifications}
                  onChange={(e) => setUser((prev) => ({ ...prev, notifications: e.target.checked }))}
                  className="form-checkbox h-5 w-5 text-blue-600"
                />
                <span className="text-gray-700">Enable Email Notifications</span>
              </label>
              <button
                type="button"
                onClick={() => console.log('Notification preferences saved')}
                className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center mt-4"
              >
                <FaSave className="mr-2" /> Save Preferences
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default UserProfile;
